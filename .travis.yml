language: java
jdk: oraclejdk8

env:
  global:
    - secure: "k65RtADSjHNgZ+RvsolR67x0D/XXjhQcDbYe93180tD5m2XBFpLYvkZZ6/aizCjRSiFJC1kuAtezzoJLAZS+kZpTIio2+1yJXOhnTJi2vqiN6HnwMfAVx1ugaxC1TPquBu+FUJSMVDKxxIeAzdMYN4ckQrSC+iSXp/UJD0mmx46SRROOkg+KZAHeSwMDaWeRUhwlXwKdyyDGM+kOCzpn/VZOkN8nkVDYTAyXZu7r4sC9eHodmDE5ZmytQqxbQ6LLQYcG/xzkXj+9fxquFq69PmakFr9L88YGZ+K6oytGcvxXLgYweSFtUVMRg+176u94iZqa/KPVlBPHaCMMCbKW+0pxX3GheKijPY+DZzeUqebfNXE4F7RGhGOreb4L8pMeFtKfiYs0i5pScZ3/d7Qz5fnMXR7vZ//8z2ZY4aor9a5vSCYJTs6k/Pwijsis3VkUUOAMyEXTwII43/BgP5F1lrcPX61ydQqflM43j+qoSgMaRljVkcxWRaH4fAUqW5RgoaJHO4YWvYC56pxHWWXvgxL2ce+/HCIFp+A147ISJR0B2N6Z8eZLvO4CYho0Pti4GWKOn44YtGh+oMMueu/vDk/16wRRY3RB1Jt7vkYakIq+Us57AAJuJiWHMspHQVhu71b8N4hfZ7I+UU41V6M94KY9WFdD0/5lAzEDM1gwbEk="
    - secure: "dTKs6k2jRihWhizcR02/ehz+r2GI6MlrO9Tt1wRjzQPUT3k7HvGibXQ98FS2KgUXlFsnwWC8Achph5+ymKHNANuxkd320cGVbEmC59N/GtG8tdw0CdLIl4zSVBuikD1kARKSlu/PdU4Uxg5wgcqm2lNgX/k6U+HDMbwRPE8EFd0vc1nitHoiovnWiA3VthZ6fuwgQ34tz4FGD23Cd90ls7jPjyQUEiX7zmsPvESRnmZzeRQSrja2QSGO6JNnOB6qmWH0ZRfH2nw13o58Zslg0piOmr3O/zFa1RHMLmhhhDLLY2Q+kifgopRZR/NfDBgB6VvLniU5vMVC6it3j7/eZgy4QkH1UTLz5tomZL4Q4f9GJ/tbPGmI6b+fKZsOBsr6+mFNJ19icj3Sx7uS0zamstCU1kKOZuYOJ0AfCwJSblKLQ0/7B1O8MHDpYw4L+3Ncu+/YwD3J3SmgYbfcUXwqms1EYeFA4dtMpnG5ofhCf+f8VXQuydWjoWPeWdGH9VcFWyZnZOAmxFnF/eXdBTCxf169dwclXd4AC3JUkJfdXbQFZsjwUjSx7SU04CZ/tBw5Me6oQ5Q8BhW+53J3arLBAVjl8mvnhB0U4Epyo73nAKOGmT0h3p48jVDxUttwpjFpRhqxnJq+sldz9R28ADrXjYsWieCZv7ohATerqMoluXY="
    - secure: "EI4VvxjbuHtCr7AN42ycFCTCIdMDjBa83OQgXMSqYvT2SlNHsW5oriwEOQKcop+XHBg1v3yHrSe4P6CNsB2uG+rBEFBHjXFcuH6/cBYt2CeHZ14tuC/eSIy8zxqwDG8Kg2wPvfw1V1v9K2HXDT0mVNhCmCHxz9sC5wgA4LM/OPJUDAUh9bsjPnyvlPddrdZROVe+LjYgW8XIpxVxVXBpG65Av4DQT8MV7EMrZ04t1WBudxMQxQ4ywB9bl2ky6MLvlG4dp123T7vT+FV48kweBf0OWEOkf8frbYICpFefhIesKcnpJr6WMq8msOY0+c2mEnk/JrQeACU8ZfLm1aXaCcV2mLf+E70diz0qPGwpvAdbDfPC46DbPTcTFBVIs5Kgh1OqNFwKzckjLOuIGLH5W8dHckPEx4FKg0yS80vjVq5+ZSwFeVsGURNG/2oHkN3PLucuSSn83vQddVsiCXp86MxDjUTgdY4dqgl/2CJDIroL+FW1A6t+dYRbGuVtM8RY7LeVyT/4xc5TCtxzMMpoE9ezSBgIGmHySsvBeeBj9wicfykimXBr6rEoVTwxynk5LsfVZ3nxmoWH+ivYveEU3JWEbX3b04j1vQzNQAj1v5Sx5arVSRyIiaPNOrLRGEKxYaARvWS9aulfnWnHOD6d6ZnmbXCYT4NEgfzYgj9wskQ="

# Define the services to use
services:
  - docker

before_install:
  - openssl aes-256-cbc -K $encrypted_24a1bedb2b11_key -iv $encrypted_24a1bedb2b11_iv
    -in travis_deploy_rsa.enc -out /tmp/travis_deploy_rsa -d
  - chmod 400 /tmp/travis_deploy_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add /tmp/travis_deploy_rsa
  - echo -e "Host $SERVER_IP_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - sudo service mysql stop
  - docker pull takimatraining/devops-training-db
  - docker run -d -p 127.0.0.1:3306:3306 takimatraining/devops-training-db

# Run Unit Test and Integration Tests
script:
  - mvn verify
  - |
    mvn clean install sonar:sonar \
    -Dsonar.projectKey=PierreBer_sample-application-students \
    -Dsonar.organization=pierreber-github \
    -Dsonar.host.url=https://sonarcloud.io \
    -Dsonar.login=0c3821a2c1785a6bf50af5003f3eb279f4b63a5c
  # Login to Docker hub
  - docker login -u $DOCKER_USER -p $DOCKER_PASS
  # Tag text according to the branch
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  # Image name
  - export IMAGE_NAME=pierreber/sample-application
  # Build the image (see Dockerfile) and tag it with the commit ID
  - docker build -t $IMAGE_NAME:$TRAVIS_COMMIT .
  # Retag the image with the previously choosen tag
  - docker tag $IMAGE_NAME:$TRAVIS_COMMIT $IMAGE_NAME:$TAG
  # Push the tagged image to Docker Hub
  - docker push $IMAGE_NAME:$TAG

# Cache the .m2 folder to prevent redownloading dependencies on each build
cache:
  directories:
  - "$HOME/.m2/repository"

# Send an email to the commiter if the pipeline failed at some point
notifications:
  email:
    on_failure: always

# Deploy updated container over ssh
deploy:
  provider: script
  script: ssh -i /tmp/travis_deploy_rsa $DEPLOY_USER@$SERVER_HOST "sudo docker pull $IMAGE_NAME:$TAG && sudo docker rm -f app || true && sudo docker run -d --network net -p 80:8080 --name app $IMAGE_NAME:$TAG"
  on:
    branch: master